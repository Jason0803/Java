package broker.three.server;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.sql.SQLException;

import broker.three.shares.Command;
import broker.three.shares.Result;

public class JuryThread extends Thread {
	private Socket s;
	private Database db;
	private Command cmd;
	private ObjectInputStream ois;
	private ObjectOutputStream oos;
	
	public JuryThread(Socket s, Database db) {
		try {
			this.s = s;
			this.db = db;
			ois = new ObjectInputStream(s.getInputStream());
			oos = new ObjectOutputStream(s.getOutputStream());
		} catch(Exception e) {
			System.out.println(e.getMessage());
		}
	}

	public void run() {
		System.out.println("Jury Run...");
		while(true) {
			try {
				cmd = (Command)ois.readObject();
				int value = cmd.getCommanValue();
				switch(value) {
					case Command.GET_ALL_CUSTOMER :{
						cmd.setResults((Result) db.getAllCustomers());
						break;
					}
					
				}
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
}
