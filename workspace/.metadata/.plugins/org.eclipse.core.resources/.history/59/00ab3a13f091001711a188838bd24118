package book.dao;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import book.exception.DuplicateIsbnException;
import book.vo.Book;
import config.DBConfig;

public class BookDAO {
	private static BookDAO dao = new BookDAO();
	private BookDAO () { 
		try {
			Class.forName(DBConfig.DRIVER);
			System.out.println("Driver Successfully Loaded !");
			
		} catch(ClassNotFoundException e) {
			System.out.println("Driver Loading Failed !");
		}
	}
	
	public static BookDAO getInstance() {
		return dao;
	}
	
	public Connection getConnect() throws SQLException {
		System.out.println("DB Connected !");
		
		return DriverManager.getConnection(DBConfig.URL, DBConfig.USER, DBConfig.PASSWORD);
	}
	
	public void closeAll(PreparedStatement ps, Connection conn) throws SQLException {
		if(ps != null) ps.close();
		if(conn != null) conn.close();
	}
	
	public void closeAll(ResultSet rs, PreparedStatement ps, Connection conn) throws SQLException {
		if(rs != null) rs.close();
		closeAll(ps, conn);
	}
	
	// DuplicateIsbnException
	
	// RecordNotFoundException
	
	// InvalidInputException
	
	public int doesExist(String isbn) throws SQLException {
		int count = 0;
		
		
		return count;
	}
	
	public void resisterBook(Book vo) throws SQLException, DuplicateIsbnException {
		Connection conn = null;
		PreparedStatement ps = null;
		
		if(doesExist(vo.getIsbn()) == !) {
			
		}
	}
	
}
