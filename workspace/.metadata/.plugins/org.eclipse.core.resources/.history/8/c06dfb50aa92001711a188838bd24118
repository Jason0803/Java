package broker.twotier.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;

import broker.twotier.exception.DuplicatedSSNException;
import broker.twotier.vo.CustomerRec;
import broker.twotier.vo.SharesRec;
import config.DBConfig;

public class Database {
	// -------------------------------------- Connection	-------------------------------------- //
	public Database(String server) throws ClassNotFoundException {
		Class.forName(DBConfig.DRIVER);
		
	}
	
	public Connection getConnect() throws SQLException {
		Connection conn = 
				DriverManager.getConnection(DBConfig.URL, DBConfig.USER, DBConfig.PASSWORD);
		
		return conn;
	}
	
	public void closeAll(PreparedStatement ps, Connection conn) throws SQLException {
		if(ps!=null) ps.close();
		if(conn!=null) conn.close();
	}
	
	public void closeAll(ResultSet rs, PreparedStatement ps, Connection conn) throws SQLException {
		if(rs!=null) rs.close();
		closeAll(ps, conn);
	}
	
	// -------------------------------------- BusnessLogic	-------------------------------------- //
	// --------------------------------- 	isExist		--------------------------------- //
	public boolean isExists(Connection conn, String ssn) throws SQLException {
		
		return false;
	}
	// --------------------------------- addCustomer	--------------------------------- //
	public void addCustomer(CustomerRec cust) throws SQLException, DuplicatedSSNException {
		Connection conn = null;
		PreparedStatement ps = null;
		
		try {
			
		} finally {
			closeAll(ps, conn);
		}
	}
	// --------------------------------- deleteCustomer	--------------------------------- //
	public void deleteCustomer(String ssn) throws SQLException, DuplicatedSSNException {
		Connection conn = null;
		PreparedStatement ps = null;
		
		try {
			
		} finally {
			closeAll(ps, conn);
		}
	}
	// --------------------------------- updateCustomer	--------------------------------- //
	public void updateCustomer(CustomerRec cust) throws SQLException, DuplicatedSSNException {
		Connection conn = null;
		PreparedStatement ps = null;
		
		try {
			
		} finally {
			closeAll(ps, conn);
		}
	}
	// --------------------------------- getPortfolio	--------------------------------- //
	public Vector<SharesRec> getPortfolio(String ssn) throws SQLException {
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		Vector<SharesRec> v = new Vector<SharesRec>();
		try {
			
		} finally {
			closeAll(rs,ps,conn);
		}
		
		
		return v;
	}
	// --------------------------------- getCustomer	--------------------------------- //
	public CustomerRec getCustomer(String ssn) throws SQLException {
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		CustomerRec cr = null;
		try {
			
		} finally {
			closeAll(rs,ps,conn);
		}
		
		return null;
	}
}
